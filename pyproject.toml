[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qwen-tui"
version = "0.1.0"
description = "A sophisticated terminal-based coding agent combining Claude Code UX patterns with Qwen3's local inference capabilities"
authors = [
    {name = "Qwen-TUI Contributors"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Shells",
    "Topic :: Text Processing :: Markup",
]
keywords = ["ai", "assistant", "tui", "terminal", "coding", "agent", "qwen"]

dependencies = [
    "textual>=0.50.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "aiofiles>=23.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.0.0",
    "tomli>=2.0.0; python_version<'3.11'",
]

[project.optional-dependencies]
ollama = [
    "ollama>=0.1.0",
]
openrouter = [
    "openai>=1.0.0",
]
vllm = [
    "vllm>=0.2.0",
]
lm-studio = [
    "openai>=1.0.0",
]
qwen-agent = [
    "qwen-agent>=0.0.5",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "coverage>=7.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-mermaid2-plugin>=1.0.0",
]
all = [
    "qwen-tui[ollama,openrouter,vllm,lm-studio,qwen-agent]",
]

[project.urls]
Homepage = "https://github.com/qwen-tui/qwen-tui"
Documentation = "https://qwen-tui.github.io/qwen-tui/"
Repository = "https://github.com/qwen-tui/qwen-tui"
Issues = "https://github.com/qwen-tui/qwen-tui/issues"

[project.scripts]
qwen-tui = "qwen_tui.cli.main:main_entry"

[tool.hatch.build.targets.wheel]
packages = ["src/qwen_tui"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/examples",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["qwen_tui"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ollama.*",
    "qwen_agent.*",
    "vllm.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async tests",
]

[tool.coverage.run]
source = ["src/qwen_tui"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]